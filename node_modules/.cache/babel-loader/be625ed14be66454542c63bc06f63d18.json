{"ast":null,"code":"var _jsxFileName = \"/Users/vladislavformaluk/ToDoList/src/components/ToDoModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from '../styles/modules/modal.module.scss';\nimport { MdOutlineClose } from \"react-icons/all\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoModal = _ref => {\n  _s();\n\n  let {\n    modalOpen,\n    setModalOpen\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('');\n  return modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.closeButton,\n        onClick: () => setModalOpen(false),\n        onKeyDown: () => setModalOpen(false),\n        tabIndex: 0,\n        role: \"button\",\n        children: /*#__PURE__*/_jsxDEV(MdOutlineClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.formTitle,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: title,\n            onChange: () => setTitle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"status\",\n          children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"status\",\n            id: \"status\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"incomplete\",\n              children: \"Incomplete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"complete\",\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"secondary\",\n            onClick: () => setModalOpen(false),\n            onKeyDown: () => setModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ToDoModal, \"CJDYGoUqwAmMyVLfwQeV5x6Um9s=\");\n\n_c = ToDoModal;\nexport default ToDoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoModal\");","map":{"version":3,"sources":["/Users/vladislavformaluk/ToDoList/src/components/ToDoModal.js"],"names":["React","useState","styles","MdOutlineClose","Button","ToDoModal","modalOpen","setModalOpen","title","setTitle","status","setStatus","wrapper","container","closeButton","form","formTitle","buttonContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,SAAS,GAAG,QAAiC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA+B;AAC/C,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEA,SACIK,SAAS,iBACL;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACU,OAAvB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,SAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACY,WAAvB;AACK,QAAA,OAAO,EAAE,MAAMP,YAAY,CAAC,KAAD,CADhC;AAEK,QAAA,SAAS,EAAE,MAAMA,YAAY,CAAC,KAAD,CAFlC;AAGK,QAAA,QAAQ,EAAE,CAHf;AAIK,QAAA,IAAI,EAAC,QAJV;AAAA,+BAMI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAM,QAAA,SAAS,EAAEL,MAAM,CAACa,IAAxB;AAAA,gCACI;AAAI,UAAA,SAAS,EAAEb,MAAM,CAACc,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA,2CAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,OAAtB;AAA8B,YAAA,KAAK,EAAER,KAArC;AAA4C,YAAA,QAAQ,EAAE,MAAMC,QAAQ;AAApE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,4CAEI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,EAAE,EAAC,QAAzB;AAAA,oCACI;AAAQ,cAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAaI;AAAK,UAAA,SAAS,EAAEP,MAAM,CAACe,eAAvB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,WAA9B;AACQ,YAAA,OAAO,EAAE,MAAMV,YAAY,CAAC,KAAD,CADnC;AAEQ,YAAA,SAAS,EAAE,MAAMA,YAAY,CAAC,KAAD,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFR;AAuCH,CA3CD;;GAAMF,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from '../styles/modules/modal.module.scss';\nimport { MdOutlineClose } from \"react-icons/all\";\nimport Button from \"./Button\";\n\n\nconst ToDoModal = ( {modalOpen, setModalOpen} ) => {\n    const [ title, setTitle ] = useState('')\n    const [status, setStatus] = useState('')\n\n    return (\n        modalOpen && (\n            <div className={styles.wrapper}>\n                <div className={styles.container}>\n                    <div className={styles.closeButton}\n                         onClick={() => setModalOpen(false)}\n                         onKeyDown={() => setModalOpen(false)}\n                         tabIndex={0}\n                         role='button'\n                    >\n                        <MdOutlineClose />\n                    </div>\n                    <form className={styles.form}>\n                        <h1 className={styles.formTitle}>Add Task</h1>\n                        <label htmlFor='title'>\n                            Title\n                            <input type='text' id='title' value={title} onChange={() => setTitle()}/>\n                        </label>\n                        <label htmlFor='status'>\n                            Status\n                            <select name='status' id='status'>\n                                <option value='incomplete'>Incomplete</option>\n                                <option value='complete'>Complete</option>\n                            </select>\n                        </label>\n                        <div className={styles.buttonContainer}>\n                            <Button type='submit' variant='primary'>Add Task</Button>\n                            <Button type='button' variant='secondary'\n                                    onClick={() => setModalOpen(false)}\n                                    onKeyDown={() => setModalOpen(false)}\n                            >\n                                Cancel\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    );\n};\n\nexport default ToDoModal;"]},"metadata":{},"sourceType":"module"}